
El PRINCIPIO DE RESPONSABILIDAD UNICA dice que UNA CLASE DEBE HACER UNA COSA Y, 
por lo tanto, DEBE TENER UNA SOLA RAZÓN PARA CAMBIAR.

Para enunciar este principio más técnicamente: Solo un cambio potencial
(lógica de base de datos, lógica de registro, etc.) en la especificación del software,
debería poder afectar la especificación de la clase.

Esto significa que si una clase es un contenedor de datos, como una clase Libro o una clase Estudiante,
y tiene algunos campos relacionados con esa entidad, debería cambiar solo cuando cambiamos 
el modelo de datos.


EJEMPLO:
-------
Veremos el código de un programa simple de facturación de librería.
Definimos una clase de libro para usar en nuestra factura, y dentro de la clase factura, verá 
que los métodos  imprimirFactura() y guardarArchivo(), NO CUMPLEN el principio. 

PASOS A SEGUIR:
--------------
Se crean las clases FacturaImpresion y FacturaPersistencia, para CUMPLIR el principio.

